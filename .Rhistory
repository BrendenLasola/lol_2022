label = "Supports",
choices = support,
),
),
### Main panel displays the bar graph
mainPanel(
plotOutput(outputId = "sup_data"),
)
)
)
jun_page <- tabPanel(
"JNG",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "jun_id",
label = "Junglers",
choices = jungle,
),
),
### Main panel displays the bar graph
mainPanel(
plotOutput(outputId = "jun_data"),
)
)
)
#creating the plot
server <- function(input,output) {
output$top_data <- renderPlot({
top <- worlds %>%
filter(position == 'top') %>%
filter(playername == input$top_id) %>%
select(playername,champion) %>%
group_by(playername,champion) %>%
summarise(total_count=n(),.groups = 'drop') %>%
arrange(desc(total_count))
top_graph <-
ggplot(top, aes(x = reorder(champion, -total_count), y = total_count)) +
geom_bar(stat="identity", color='black',fill='gray') +
xlab('Champion') +
ylab('# Picked') +
labs(title = "Champion Diversity",
subtitle = "How many times did they pick X character?") +
theme_fivethirtyeight() +
scale_y_continuous(breaks=c(0,2,4,6,8,10))
top_graph
})
output$bot_data <- renderPlot({
bot <- worlds %>%
filter(position == 'bot') %>%
filter(playername == input$bot_id) %>%
select(playername,champion) %>%
group_by(playername,champion) %>%
summarise(total_count=n(),.groups = 'drop') %>%
arrange(desc(total_count))
bot_graph <-
ggplot(bot, aes(x = reorder(champion, -total_count), y = total_count)) +
geom_bar(stat="identity", color='black',fill='gray') +
xlab('Champion') +
ylab('# Picked') +
labs(title = "Champion Diversity",
subtitle = "How many times did they pick X character?") +
theme_fivethirtyeight() +
scale_y_continuous(breaks=c(0,2,4,6,8,10))
bot_graph
})
output$sup_data <- renderPlot({
sup <- worlds %>%
filter(position == 'sup') %>%
filter(playername == input$sup_id) %>%
select(playername,champion) %>%
group_by(playername,champion) %>%
summarise(total_count=n(),.groups = 'drop') %>%
arrange(desc(total_count))
sup_graph <-
ggplot(sup, aes(x = reorder(champion, -total_count), y = total_count)) +
geom_bar(stat="identity", color='black',fill='gray') +
xlab('Champion') +
ylab('# Picked') +
labs(title = "Champion Diversity",
subtitle = "How many times did they pick X character?") +
theme_fivethirtyeight() +
scale_y_continuous(breaks=c(0,2,4,6,8,10))
sup_graph
})
output$mid_data <- renderPlot({
mid <- worlds %>%
filter(position == 'mid') %>%
filter(playername == input$mid_id) %>%
select(playername,champion) %>%
group_by(playername,champion) %>%
summarise(total_count=n(),.groups = 'drop') %>%
arrange(desc(total_count))
mid_graph <-
ggplot(mid, aes(x = reorder(champion, -total_count), y = total_count)) +
geom_bar(stat="identity", color='black',fill='gray') +
xlab('Champion') +
ylab('# Picked') +
labs(title = "Champion Diversity",
subtitle = "How many times did they pick X character?") +
theme_fivethirtyeight() +
scale_y_continuous(breaks=c(0,2,4,6,8,10))
mid_graph
})
output$jun_data <- renderPlot({
jun <- worlds %>%
filter(position == 'jng') %>%
filter(playername == input$jun_id) %>%
select(playername,champion) %>%
group_by(playername,champion) %>%
summarise(total_count=n(),.groups = 'drop') %>%
arrange(desc(total_count))
jun_graph <- ggplot(jun, aes(x = reorder(champion, -total_count), y = total_count)) +
geom_bar(stat="identity", color='black',fill='gray') +
xlab('Champion') +
ylab('# Picked') +
labs(title = "Champion Diversity",
subtitle = "How many times did they pick X character?") +
theme_fivethirtyeight() +
scale_y_continuous(breaks=c(0,2,4,6,8,10))
jun_graph
})
}
ui <- fluidPage(theme = shinytheme('cosmo'),
navbarPage("WORLDS 2022 CHAMPION DIVERSITY",
top_page,jun_page,mid_page,bot_page,sup_page))
# Run the application
shinyApp(  ui, server = server)
runApp('GitHub/lol_2022/shiny_app.R')
runApp('GitHub/lol_2022/shiny_app.R')
runApp('GitHub/lol_2022/shiny_app.R')
runApp('GitHub/lol_2022/shiny_app.R')
runApp('GitHub/lol_2022/shiny_app.R')
source("GitHub/lol_2022/analysis.R")
top_page <- tabPanel(
"TOP",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "top_id",
label = "Top Laners",
choices = top_laners,
),
),
### Main panel displays the bar graph
mainPanel(
plotOutput(outputId = "top_data"),
)
)
)
bot_page <- tabPanel(
"ADC",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "bot_id",
label = "AD Carrys",
choices = bot_laners,
),
),
### Main panel displays the bar graph
mainPanel(
plotOutput(outputId = "bot_data"),
)
)
)
mid_page <- tabPanel(
"MID",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "mid_id",
label = "Mid Laners",
choices = mid_laners,
),
),
### Main panel displays the bar graph
mainPanel(
plotOutput(outputId = "mid_data"),
)
)
)
sup_page <- tabPanel(
"SUP",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "sup_id",
label = "Supports",
choices = support,
),
),
### Main panel displays the bar graph
mainPanel(
plotOutput(outputId = "sup_data"),
)
)
)
jun_page <- tabPanel(
"JNG",
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "jun_id",
label = "Junglers",
choices = jungle,
),
),
### Main panel displays the bar graph
mainPanel(
plotOutput(outputId = "jun_data"),
)
)
)
#creating the plot
server <- function(input,output) {
output$top_data <- renderPlot({
top <- worlds %>%
filter(position == 'top') %>%
filter(playername == input$top_id) %>%
select(playername,champion) %>%
group_by(playername,champion) %>%
summarise(total_count=n(),.groups = 'drop') %>%
arrange(desc(total_count))
top_graph <-
ggplot(top, aes(x = reorder(champion, -total_count), y = total_count)) +
geom_bar(stat="identity", color='black',fill='gray') +
xlab('Champion') +
ylab('# Picked') +
labs(title = "Champion Diversity",
subtitle = "How many times did they pick X character?") +
theme_fivethirtyeight() +
scale_y_continuous(breaks=c(0,2,4,6,8,10))
top_graph
})
output$bot_data <- renderPlot({
bot <- worlds %>%
filter(position == 'bot') %>%
filter(playername == input$bot_id) %>%
select(playername,champion) %>%
group_by(playername,champion) %>%
summarise(total_count=n(),.groups = 'drop') %>%
arrange(desc(total_count))
bot_graph <-
ggplot(bot, aes(x = reorder(champion, -total_count), y = total_count)) +
geom_bar(stat="identity", color='black',fill='gray') +
xlab('Champion') +
ylab('# Picked') +
labs(title = "Champion Diversity",
subtitle = "How many times did they pick X character?") +
theme_fivethirtyeight() +
scale_y_continuous(breaks=c(0,2,4,6,8,10))
bot_graph
})
output$sup_data <- renderPlot({
sup <- worlds %>%
filter(position == 'sup') %>%
filter(playername == input$sup_id) %>%
select(playername,champion) %>%
group_by(playername,champion) %>%
summarise(total_count=n(),.groups = 'drop') %>%
arrange(desc(total_count))
sup_graph <-
ggplot(sup, aes(x = reorder(champion, -total_count), y = total_count)) +
geom_bar(stat="identity", color='black',fill='gray') +
xlab('Champion') +
ylab('# Picked') +
labs(title = "Champion Diversity",
subtitle = "How many times did they pick X character?") +
theme_fivethirtyeight() +
scale_y_continuous(breaks=c(0,2,4,6,8,10))
sup_graph
})
output$mid_data <- renderPlot({
mid <- worlds %>%
filter(position == 'mid') %>%
filter(playername == input$mid_id) %>%
select(playername,champion) %>%
group_by(playername,champion) %>%
summarise(total_count=n(),.groups = 'drop') %>%
arrange(desc(total_count))
mid_graph <-
ggplot(mid, aes(x = reorder(champion, -total_count), y = total_count)) +
geom_bar(stat="identity", color='black',fill='gray') +
xlab('Champion') +
ylab('# Picked') +
labs(title = "Champion Diversity",
subtitle = "How many times did they pick X character?") +
theme_fivethirtyeight() +
scale_y_continuous(breaks=c(0,2,4,6,8,10))
mid_graph
})
output$jun_data <- renderPlot({
jun <- worlds %>%
filter(position == 'jng') %>%
filter(playername == input$jun_id) %>%
select(playername,champion) %>%
group_by(playername,champion) %>%
summarise(total_count=n(),.groups = 'drop') %>%
arrange(desc(total_count))
jun_graph <- ggplot(jun, aes(x = reorder(champion, -total_count), y = total_count)) +
geom_bar(stat="identity", color='black',fill='gray') +
xlab('Champion') +
ylab('# Picked') +
labs(title = "Champion Diversity",
subtitle = "How many times did they pick X character?") +
theme_fivethirtyeight() +
scale_y_continuous(breaks=c(0,2,4,6,8,10))
jun_graph
})
}
ui <- fluidPage(theme = shinytheme('cosmo'),
navbarPage("WORLDS 2022 CHAMPION DIVERSITY",
top_page,jun_page,mid_page,bot_page,sup_page))
# Run the application
shinyApp(  ui, server = server)
getwd()
setwd("~/GitHub/lol_2022")
getwd()
runApp('shiny_app.R')
source("~/GitHub/lol_2022/analysis.R")
lol_data <-  read.csv("Data/2022_lol.csv")
lol_data <-  read.csv("Data/2022_lol.csv")
blue_side <- worlds %>%
filter(position == 'team') %>%
filter(side == 'Blue') %>%
select(gameid,teamname,side,ban1,ban2,ban3,ban4,ban5) %>%
rename(blue_team = teamname,
blue = side,
b1 = ban1,
b2 = ban2,
b3 = ban3,
b4 = ban4,
b5 = ban5)
Loading Dataset
lol_data <-  read.csv("Data/2022_lol.csv")
getwd()
library(dplyr)
library(tidyverse)
library(ggplot2)
library(shiny)
library(shinythemes)
library(ggthemes)
#Loading Dataset
lol_data <-  read.csv("Data/2022_lol.csv")
lol_data <-  read.csv("C:/Users/Brenden/Documents/GitHub/lol_2022/2022_lol.csv")
lol_data <-  read.csv("C:/Users/Brenden/Documents/GitHub/lol_2022/2022_lol.csv")
source("~/GitHub/lol_2022/analysis.R")
runApp('shiny_app.R')
runApp('shiny_app.R')
source("~/GitHub/lol_2022/analysis.R")
runApp('shiny_app.R')
#midlane champs
mid_champs <- worlds %>%
filter(position == "mid") %>%
select(unique(champion))
#midlane champs
mid_champs <- worlds %>%
filter(position == "mid") %>%
select*champion)
mid_champs <- worlds %>%
filter(position == "mid") %>%
select(champion)
mid_champs
mid_champs <- unique(mid_chamops)
mid_champs <- unique(mid_champs)
mid_champs
View(mid_champs)
mid_champs <- worlds %>%
filter(position == "mid") %>%
select(playername,champion)
mid_champs
mid_champs <- unique(mid_champs)
mid_champs
View(mid_champs)
#list of mid_champs
mid_champs <- unique(mid_champs$champion)
mid_champs
VieW(mid_champs)
mid_champs
num_midchamps <- length(mid_champs)
num_midchamps
return(num_champs)
champs <- function(role) {
champions <- worlds %>%
filter(position == role) %>%
select(playername,champion)
num_champs <- length(unique(champions$champion))
return(num_champs)
}
champs("adc")
champs("jng")
champs("top")
champs("bot")
champs("sup")
champs("mid")
champs('adc', worlds_2021)
champs <- function(role,world) {
champions <- world %>%
filter(position == role) %>%
select(playername,champion)
num_champs <- length(unique(champions$champion))
return(num_champs)
}
worlds_2021 <- lol_data %>%
filter(league =='WCS') %>%
filter(patch == '11.19')
champs('adc', worlds_2021)
champs('bot', worlds_2021)
worlds_2021
LCK <- lol_data %>%
filter(league =='LCK')
LCK
View(LCK)
LCK <- lol_data %>%
filter(league =='LCK') %>%
filter(patch == "12.14")
View(LCK)
champs('bot', LCK)
champs('mid', LCK)
champs('top', LCK)
champs('sup', LCK)
View(worlds_team)
length(worlds_team)
LCK
View(LCK)
LCK <- lol_data %>%
filter(league =='LCK') %>%
filter(patch == "12.14")
View(LCK)
#LCK playoffs
LCK <- lol_data %>%
filter(league =='LCK') %>%
filter(patch == "12.14") %>%
filter(position == "team")
View(LCK)
#LCK playoffs
LCK <- lol_data %>%
filter(league =='LCK') %>%
filter(patch == "12.14") %>%
filter(position == "team") %>%
filter(side == "blue")
View(LCK)
LCK <- lol_data %>%
filter(league =='LCK') %>%
filter(patch == "12.14") %>%
filter(position == "team")# %>%
#filter(side == "blue")
View(LCK)
LCK <- lol_data %>%
filter(league =='LCK') %>%
filter(patch == "12.14") %>%
filter(position == "team") %>%
filter(side == "Blue")
View(LCK)
LCS <- lol_data %>%
filter(league =='LCS') %>%
filter(patch == "12.15") %>%
filter(position == "team") %>%
filter(side == "Blue")
champs('sup', LCS)
LCS <- lol_data %>%
filter(league =='LCS') %>%
filter(patch == "12.15") %>%
filter(position == "team") %>%
filter(side == "Blue")
champs('sup', LCS)
View(LCS)
champs('mid', LCS)
champs <- function(role,region) {
champions <- region%>%
filter(position == role) %>%
select(playername,champion)
num_champs <- length(unique(champions$champion))
return(num_champs)
}
#LCS playoffs
LCS <- lol_data %>%
filter(league =='LCS') %>%
filter(patch == "12.15") %>%
filter(position == "team") %>%
filter(side == "Blue")
champs('mid', LCS)
champs('mid', worlds)
LCS <- lol_data %>%
filter(league =='LCS') %>%
filter(patch == "12.15") %>%
filter(side == "Blue")
champs('mid', worlds)
champs('mid', LCS)
#LCS playoffs
LCS <- lol_data %>%
filter(league =='LCS') %>%
filter(patch == "12.15")
LCS <- lol_data %>%
filter(league =='LCS') %>%
filter(patch == "12.15")
champs('mid', LCS)
champs('top', LCS)
champs('jng', LCS)
champs('bot', LCS)
champs('sup', LCS)
num_LCS
num_LCS <- LCS %>%
filter(side =="Blue") %>%
filter(position == "team")
num_LCS
View(num_LCS)
View(worlds_team)
Unique(LCS$gameid)
unique(LCS$gameid)
unique(worlds_team$gameid)
